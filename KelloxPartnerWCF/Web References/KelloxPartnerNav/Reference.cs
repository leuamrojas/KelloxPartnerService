//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KelloxPartnerWCF.KelloxPartnerNav {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="KelloxPartnerWS_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS")]
    public partial class KelloxPartnerWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReceiveOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback @__LocalFunctions__OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerCreditAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChrOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChrErstattOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErstattChrOperationCompleted;
        
        private System.Threading.SendOrPostCallback TemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormatDateGOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormatOutputDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditLimitCheckFromQuickOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_logOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public KelloxPartnerWS() {
            this.Url = global::KelloxPartnerWCF.Properties.Settings.Default.KelloxPartnerWCF_KelloxPartnerNav_KelloxPartnerWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReceiveOrderCompletedEventHandler ReceiveOrderCompleted;
        
        /// <remarks/>
        public event @__LocalFunctions__CompletedEventHandler @__LocalFunctions__Completed;
        
        /// <remarks/>
        public event GetCustomerCreditAmountCompletedEventHandler GetCustomerCreditAmountCompleted;
        
        /// <remarks/>
        public event ChrCompletedEventHandler ChrCompleted;
        
        /// <remarks/>
        public event ChrErstattCompletedEventHandler ChrErstattCompleted;
        
        /// <remarks/>
        public event ErstattChrCompletedEventHandler ErstattChrCompleted;
        
        /// <remarks/>
        public event TemplateCompletedEventHandler TemplateCompleted;
        
        /// <remarks/>
        public event FormatDateGCompletedEventHandler FormatDateGCompleted;
        
        /// <remarks/>
        public event FormatOutputDateCompletedEventHandler FormatOutputDateCompleted;
        
        /// <remarks/>
        public event CreditLimitCheckFromQuickOrderCompletedEventHandler CreditLimitCheckFromQuickOrderCompleted;
        
        /// <remarks/>
        public event Update_logCompletedEventHandler Update_logCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:ReceiveOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="ReceiveOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReceiveOrder(string reservationInputXml, ref string bigTextP) {
            object[] results = this.Invoke("ReceiveOrder", new object[] {
                        reservationInputXml,
                        bigTextP});
            bigTextP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveOrderAsync(string reservationInputXml, string bigTextP) {
            this.ReceiveOrderAsync(reservationInputXml, bigTextP, null);
        }
        
        /// <remarks/>
        public void ReceiveOrderAsync(string reservationInputXml, string bigTextP, object userState) {
            if ((this.ReceiveOrderOperationCompleted == null)) {
                this.ReceiveOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveOrderOperationCompleted);
            }
            this.InvokeAsync("ReceiveOrder", new object[] {
                        reservationInputXml,
                        bigTextP}, this.ReceiveOrderOperationCompleted, userState);
        }
        
        private void OnReceiveOrderOperationCompleted(object arg) {
            if ((this.ReceiveOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveOrderCompleted(this, new ReceiveOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:__LocalFunctions__", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="__LocalFunctions___Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void @__LocalFunctions__() {
            this.Invoke("__LocalFunctions__", new object[0]);
        }
        
        /// <remarks/>
        public void @__LocalFunctions__Async() {
            this.@__LocalFunctions__Async(null);
        }
        
        /// <remarks/>
        public void @__LocalFunctions__Async(object userState) {
            if ((this.@__LocalFunctions__OperationCompleted == null)) {
                this.@__LocalFunctions__OperationCompleted = new System.Threading.SendOrPostCallback(this.On__LocalFunctions__OperationCompleted);
            }
            this.InvokeAsync("__LocalFunctions__", new object[0], this.@__LocalFunctions__OperationCompleted, userState);
        }
        
        private void On__LocalFunctions__OperationCompleted(object arg) {
            if ((this.@__LocalFunctions__Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.@__LocalFunctions__Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:GetCustomerCreditAmount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="GetCustomerCreditAmount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetCustomerCreditAmount(string custNoP, ref decimal outstOrderAmtP) {
            object[] results = this.Invoke("GetCustomerCreditAmount", new object[] {
                        custNoP,
                        outstOrderAmtP});
            outstOrderAmtP = ((decimal)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerCreditAmountAsync(string custNoP, decimal outstOrderAmtP) {
            this.GetCustomerCreditAmountAsync(custNoP, outstOrderAmtP, null);
        }
        
        /// <remarks/>
        public void GetCustomerCreditAmountAsync(string custNoP, decimal outstOrderAmtP, object userState) {
            if ((this.GetCustomerCreditAmountOperationCompleted == null)) {
                this.GetCustomerCreditAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerCreditAmountOperationCompleted);
            }
            this.InvokeAsync("GetCustomerCreditAmount", new object[] {
                        custNoP,
                        outstOrderAmtP}, this.GetCustomerCreditAmountOperationCompleted, userState);
        }
        
        private void OnGetCustomerCreditAmountOperationCompleted(object arg) {
            if ((this.GetCustomerCreditAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerCreditAmountCompleted(this, new GetCustomerCreditAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:Chr", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="Chr_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Chr(int aSCIIValue) {
            object[] results = this.Invoke("Chr", new object[] {
                        aSCIIValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChrAsync(int aSCIIValue) {
            this.ChrAsync(aSCIIValue, null);
        }
        
        /// <remarks/>
        public void ChrAsync(int aSCIIValue, object userState) {
            if ((this.ChrOperationCompleted == null)) {
                this.ChrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChrOperationCompleted);
            }
            this.InvokeAsync("Chr", new object[] {
                        aSCIIValue}, this.ChrOperationCompleted, userState);
        }
        
        private void OnChrOperationCompleted(object arg) {
            if ((this.ChrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChrCompleted(this, new ChrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:ChrErstatt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="ChrErstatt_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChrErstatt(ref string tekst) {
            object[] results = this.Invoke("ChrErstatt", new object[] {
                        tekst});
            tekst = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChrErstattAsync(string tekst) {
            this.ChrErstattAsync(tekst, null);
        }
        
        /// <remarks/>
        public void ChrErstattAsync(string tekst, object userState) {
            if ((this.ChrErstattOperationCompleted == null)) {
                this.ChrErstattOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChrErstattOperationCompleted);
            }
            this.InvokeAsync("ChrErstatt", new object[] {
                        tekst}, this.ChrErstattOperationCompleted, userState);
        }
        
        private void OnChrErstattOperationCompleted(object arg) {
            if ((this.ChrErstattCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChrErstattCompleted(this, new ChrErstattCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:ErstattChr", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="ErstattChr_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ErstattChr(ref string tekst) {
            object[] results = this.Invoke("ErstattChr", new object[] {
                        tekst});
            tekst = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ErstattChrAsync(string tekst) {
            this.ErstattChrAsync(tekst, null);
        }
        
        /// <remarks/>
        public void ErstattChrAsync(string tekst, object userState) {
            if ((this.ErstattChrOperationCompleted == null)) {
                this.ErstattChrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErstattChrOperationCompleted);
            }
            this.InvokeAsync("ErstattChr", new object[] {
                        tekst}, this.ErstattChrOperationCompleted, userState);
        }
        
        private void OnErstattChrOperationCompleted(object arg) {
            if ((this.ErstattChrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErstattChrCompleted(this, new ErstattChrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:Template", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="Template_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Template(string customerNoP, ref string bigTextP) {
            object[] results = this.Invoke("Template", new object[] {
                        customerNoP,
                        bigTextP});
            bigTextP = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TemplateAsync(string customerNoP, string bigTextP) {
            this.TemplateAsync(customerNoP, bigTextP, null);
        }
        
        /// <remarks/>
        public void TemplateAsync(string customerNoP, string bigTextP, object userState) {
            if ((this.TemplateOperationCompleted == null)) {
                this.TemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTemplateOperationCompleted);
            }
            this.InvokeAsync("Template", new object[] {
                        customerNoP,
                        bigTextP}, this.TemplateOperationCompleted, userState);
        }
        
        private void OnTemplateOperationCompleted(object arg) {
            if ((this.TemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TemplateCompleted(this, new TemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:FormatDateG", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="FormatDateG_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime FormatDateG(string txtDateP) {
            object[] results = this.Invoke("FormatDateG", new object[] {
                        txtDateP});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void FormatDateGAsync(string txtDateP) {
            this.FormatDateGAsync(txtDateP, null);
        }
        
        /// <remarks/>
        public void FormatDateGAsync(string txtDateP, object userState) {
            if ((this.FormatDateGOperationCompleted == null)) {
                this.FormatDateGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormatDateGOperationCompleted);
            }
            this.InvokeAsync("FormatDateG", new object[] {
                        txtDateP}, this.FormatDateGOperationCompleted, userState);
        }
        
        private void OnFormatDateGOperationCompleted(object arg) {
            if ((this.FormatDateGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormatDateGCompleted(this, new FormatDateGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:FormatOutputDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="FormatOutputDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FormatOutputDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime inputDateP) {
            object[] results = this.Invoke("FormatOutputDate", new object[] {
                        inputDateP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FormatOutputDateAsync(System.DateTime inputDateP) {
            this.FormatOutputDateAsync(inputDateP, null);
        }
        
        /// <remarks/>
        public void FormatOutputDateAsync(System.DateTime inputDateP, object userState) {
            if ((this.FormatOutputDateOperationCompleted == null)) {
                this.FormatOutputDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormatOutputDateOperationCompleted);
            }
            this.InvokeAsync("FormatOutputDate", new object[] {
                        inputDateP}, this.FormatOutputDateOperationCompleted, userState);
        }
        
        private void OnFormatOutputDateOperationCompleted(object arg) {
            if ((this.FormatOutputDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormatOutputDateCompleted(this, new FormatOutputDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:CreditLimitCheckFromQuick" +
            "Order", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="CreditLimitCheckFromQuickOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreditLimitCheckFromQuickOrder(int orderIdP, string customerNoP, ref decimal availCrAmountP, ref decimal orderAmtP) {
            object[] results = this.Invoke("CreditLimitCheckFromQuickOrder", new object[] {
                        orderIdP,
                        customerNoP,
                        availCrAmountP,
                        orderAmtP});
            availCrAmountP = ((decimal)(results[1]));
            orderAmtP = ((decimal)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreditLimitCheckFromQuickOrderAsync(int orderIdP, string customerNoP, decimal availCrAmountP, decimal orderAmtP) {
            this.CreditLimitCheckFromQuickOrderAsync(orderIdP, customerNoP, availCrAmountP, orderAmtP, null);
        }
        
        /// <remarks/>
        public void CreditLimitCheckFromQuickOrderAsync(int orderIdP, string customerNoP, decimal availCrAmountP, decimal orderAmtP, object userState) {
            if ((this.CreditLimitCheckFromQuickOrderOperationCompleted == null)) {
                this.CreditLimitCheckFromQuickOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditLimitCheckFromQuickOrderOperationCompleted);
            }
            this.InvokeAsync("CreditLimitCheckFromQuickOrder", new object[] {
                        orderIdP,
                        customerNoP,
                        availCrAmountP,
                        orderAmtP}, this.CreditLimitCheckFromQuickOrderOperationCompleted, userState);
        }
        
        private void OnCreditLimitCheckFromQuickOrderOperationCompleted(object arg) {
            if ((this.CreditLimitCheckFromQuickOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditLimitCheckFromQuickOrderCompleted(this, new CreditLimitCheckFromQuickOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS:Update_log", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", ResponseElementName="Update_log_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KelloxPartnerWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_log(int xmlLogIdP, string bigTextP) {
            this.Invoke("Update_log", new object[] {
                        xmlLogIdP,
                        bigTextP});
        }
        
        /// <remarks/>
        public void Update_logAsync(int xmlLogIdP, string bigTextP) {
            this.Update_logAsync(xmlLogIdP, bigTextP, null);
        }
        
        /// <remarks/>
        public void Update_logAsync(int xmlLogIdP, string bigTextP, object userState) {
            if ((this.Update_logOperationCompleted == null)) {
                this.Update_logOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_logOperationCompleted);
            }
            this.InvokeAsync("Update_log", new object[] {
                        xmlLogIdP,
                        bigTextP}, this.Update_logOperationCompleted, userState);
        }
        
        private void OnUpdate_logOperationCompleted(object arg) {
            if ((this.Update_logCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_logCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveOrderCompletedEventHandler(object sender, ReceiveOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigTextP {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void @__LocalFunctions__CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerCreditAmountCompletedEventHandler(object sender, GetCustomerCreditAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerCreditAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerCreditAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal outstOrderAmtP {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChrCompletedEventHandler(object sender, ChrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChrErstattCompletedEventHandler(object sender, ChrErstattCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChrErstattCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChrErstattCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string tekst {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ErstattChrCompletedEventHandler(object sender, ErstattChrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErstattChrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErstattChrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string tekst {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void TemplateCompletedEventHandler(object sender, TemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigTextP {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FormatDateGCompletedEventHandler(object sender, FormatDateGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormatDateGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormatDateGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FormatOutputDateCompletedEventHandler(object sender, FormatOutputDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormatOutputDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormatOutputDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreditLimitCheckFromQuickOrderCompletedEventHandler(object sender, CreditLimitCheckFromQuickOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditLimitCheckFromQuickOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditLimitCheckFromQuickOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal availCrAmountP {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal orderAmtP {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Update_logCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591